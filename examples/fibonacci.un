#========#
# Basics #
#========#

0 { - 0 | }

if=0 { { - 0 | + } - }

if>0 { - + }



#==========================#
# Addition and Subtraction #
#==========================#

+2 { + + }
+8 { + + + + + + + + }
-2 { - - }
-8 { - - - - - - - - }

+000 { }
+001 { + }
+010 { + + }
+011 { + + + }
+100 { + + + + }
+101 { + + + + + }
+110 { + + + + + + }
+111 { + + + + + + + }

-000 { }
-001 { - }
-010 { - - }
-011 { - - - }
-100 { - - - - }
-101 { - - - - - }
-110 { - - - - - - }
-111 { - - - - - - - }



#=============================#
# Multiplication and Division #
#=============================#

*2 { - *2 +2 | }
*8 { - *8 +8 | }

/2 { -2 /2 + | 0 }
/8 { -8 /8 + | 0 }

if/2 { -2 if/2 + | if=0 }



#=====================#
# Modulo Conditionals #
#=====================#

if=000mod8 { -8 if=000mod8 +8 | if=0 }
if=001mod8 { -001 if=000mod8 +001 }
if=010mod8 { -010 if=000mod8 +010 }
if=011mod8 { -011 if=000mod8 +011 }
if=100mod8 { -100 if=000mod8 +100 }
if=101mod8 { -101 if=000mod8 +101 }
if=110mod8 { -110 if=000mod8 +110 }
if=111mod8 { -111 if=000mod8 +111 }



#===============================#
# Getting and Setting Registers #
#===============================#

setR0
    { if=0
    | if/2 setR0 *8
    |   /2 setR0 *8 +
}

getR1
    { if=0
    | if=000mod8 /8 getR1 *2
    | if=001mod8 /8 getR1 *2
    | if=010mod8 /8 getR1 *2 +
    | if=011mod8 /8 getR1 *2 +
    | if=100mod8 /8 getR1 *2
    | if=101mod8 /8 getR1 *2
    | if=110mod8 /8 getR1 *2 +
    | if=111mod8 /8 getR1 *2 +
}

getR2
    { if=0
    | if=000mod8 /8 getR2 *2
    | if=001mod8 /8 getR2 *2
    | if=010mod8 /8 getR2 *2
    | if=011mod8 /8 getR2 *2
    | if=100mod8 /8 getR2 *2 +
    | if=101mod8 /8 getR2 *2 +
    | if=110mod8 /8 getR2 *2 +
    | if=111mod8 /8 getR2 *2 +
}



#=======================#
# Register Conditionals #
#=======================#

ifR0=0
    { if=0
    | if=000mod8 /8 ifR0=0 *8 +000
    | if=010mod8 /8 ifR0=0 *8 +010
    | if=100mod8 /8 ifR0=0 *8 +100
    | if=110mod8 /8 ifR0=0 *8 +110
}

ifR0=1
    { if=001mod8 /8 ifR0=0 *8 +001
    | if=011mod8 /8 ifR0=0 *8 +011
    | if=101mod8 /8 ifR0=0 *8 +101
    | if=111mod8 /8 ifR0=0 *8 +111
}



#=====================#
# Register Operations #
#=====================#

R2=0
    { if=0
    | if=000mod8 /8 R2=0 *8 +000
    | if=001mod8 /8 R2=0 *8 +001
    | if=010mod8 /8 R2=0 *8 +010
    | if=011mod8 /8 R2=0 *8 +011
    | if=100mod8 /8 R2=0 *8 +000
    | if=101mod8 /8 R2=0 *8 +001
    | if=110mod8 /8 R2=0 *8 +010
    | if=111mod8 /8 R2=0 *8 +011
}

R2=1
    { if=0
    | if=000mod8 /8 R2=0 *8 +100
    | if=001mod8 /8 R2=0 *8 +101
    | if=010mod8 /8 R2=0 *8 +110
    | if=011mod8 /8 R2=0 *8 +111
    | if=100mod8 /8 R2=0 *8 +100
    | if=101mod8 /8 R2=0 *8 +101
    | if=110mod8 /8 R2=0 *8 +110
    | if=111mod8 /8 R2=0 *8 +111
}

R0=R0-1
    { if>0 if=000mod8 /8 R0=R0-1 *8 +001
    |      if=001mod8 -
    |      if=010mod8 /8 R0=R0-1 *8 +011
    |      if=011mod8 -
    |      if=100mod8 /8 R0=R0-1 *8 +101
    |      if=101mod8 -
    |      if=110mod8 /8 R0=R0-1 *8 +111
    |      if=111mod8 -
}

R0=R0-2
    { if=000mod8 /8 R0=R0-1 *8 +000
    | if=001mod8 /8 R0=R0-1 *8 +001
    | if=010mod8 /8 R0=R0-1 *8 +010
    | if=011mod8 /8 R0=R0-1 *8 +011
    | if=100mod8 /8 R0=R0-1 *8 +100
    | if=101mod8 /8 R0=R0-1 *8 +101
    | if=110mod8 /8 R0=R0-1 *8 +110
    | if=111mod8 /8 R0=R0-1 *8 +111
}

R1=R1+R2
    { if=0                        +000
    | if=000mod8 /8 R1=R1+R2   *8 +000
    | if=001mod8 /8 R1=R1+R2   *8 +001
    | if=010mod8 /8 R1=R1+R2   *8 +010
    | if=011mod8 /8 R1=R1+R2   *8 +011
    | if=100mod8 /8 R1=R1+R2   *8 +110
    | if=101mod8 /8 R1=R1+R2   *8 +111
    | if=110mod8 /8 R1=R1+R2+1 *8 +100
    | if=111mod8 /8 R1=R1+R2+1 *8 +101
}

R1=R1+R2+1
    { if=0                        +010
    | if=000mod8 /8 R1=R1+R2   *8 +010
    | if=001mod8 /8 R1=R1+R2   *8 +011
    | if=010mod8 /8 R1=R1+R2+1 *8 +000
    | if=011mod8 /8 R1=R1+R2+1 *8 +001
    | if=100mod8 /8 R1=R1+R2+1 *8 +100
    | if=101mod8 /8 R1=R1+R2+1 *8 +101
    | if=110mod8 /8 R1=R1+R2+1 *8 +110
    | if=111mod8 /8 R1=R1+R2+1 *8 +111
}

R2=R1+R2
    { if=0                        +000
    | if=000mod8 /8 R2=R1+R2   *8 +000
    | if=001mod8 /8 R2=R1+R2   *8 +001
    | if=010mod8 /8 R2=R1+R2   *8 +110
    | if=011mod8 /8 R2=R1+R2   *8 +111
    | if=100mod8 /8 R2=R1+R2   *8 +100
    | if=101mod8 /8 R2=R1+R2   *8 +101
    | if=110mod8 /8 R2=R1+R2+1 *8 +010
    | if=111mod8 /8 R2=R1+R2+1 *8 +011
}

R2=R1+R2+1
    { if=0                        +100
    | if=000mod8 /8 R2=R1+R2   *8 +100
    | if=001mod8 /8 R2=R1+R2   *8 +101
    | if=010mod8 /8 R2=R1+R2+1 *8 +010
    | if=011mod8 /8 R2=R1+R2+1 *8 +011
    | if=100mod8 /8 R2=R1+R2+1 *8 +000
    | if=101mod8 /8 R2=R1+R2+1 *8 +001
    | if=110mod8 /8 R2=R1+R2+1 *8 +110
    | if=111mod8 /8 R2=R1+R2+1 *8 +111
}



#===========#
# Fibonacci #
#===========#

# register |  R0  |  R1   |   R2    |
# value    | n-2i | f(2i) | f(2i+1) |

fib'
    { ifR0=0 getR1
    | ifR0=1 getR2
    | R0=R0-2 R1=R1+R2 R2=R1+R2 fib'
}

fib { setR0 R2=1 fib' }

main { fib }